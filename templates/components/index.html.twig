{% set active = "Components" %}
{% include "base.html.twig" %}
<body class="bg-gray-50">
{% include "components/dashboard_layout.html.twig"%}
<!-- Left part - Content  -->
<main>
    <div class="p-7">
        <div class="sm:hidden">
            <label for="tabs" class="sr-only">Select a tab</label>
            <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
            <select id="selecttab" name="tabs" class="block w-full py-2 px-2 rounded-md focus:border-rose-500 focus:ring-rose-500 shadow">
                <option selected>Your components</option>
                <option>Purchased components</option>
            </select>
        </div>
        <div class="hidden sm:block">
            <nav class="flex space-x-4 tabs" aria-label="Tabs">
                <!-- Current: "bg-indigo-100 text-indigo-700", Default: "text-gray-500 hover:text-gray-700" -->
                <a id="all" href="#" class="tab active bg-primary-menubg text-primary rounded-md px-3 py-2 text-sm font-medium">Your components</a>
                <a id="sales" href="#" class="tab text-gray-500 hover:text-gray-700 rounded-md px-3 py-2 text-sm font-medium">Purchased components</a>
                <script>
                </script>
            </nav>
        </div>
    </div>
    <div class="menu">
        <div class="content">
            <div id="tab1" class="tab-content active"> <!-- Your components section -->
                <!-- Deployment list -->
                {% if app.user.components|length == 0 %}
                    <div class="text-center h-1/2 flex flex-col justify-center">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
                        </svg>
                        <h3 class="mt-2 text-sm font-semibold text-gray-900">No components</h3>
                        <p class="mt-1 text-sm text-gray-500">Get started by creating a new component.</p>
                        <div class="mt-6">
                            <a href="/components/new" class="inline-flex items-center rounded-md bg-primary px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-primary-hover focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-rose-600 transition ease-in-out duration-300">
                                <svg class="-ml-0.5 mr-1.5 h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" />
                                </svg>
                                New Component
                            </a>
                        </div>
                    </div>

                {% endif %}
                <div class="px-4 sm:px-6 lg:px-8">
                <ul role="list" class="divide-y divide-gray-200">
                    {% for component in app.user.components|reverse %}
                        <li class="relative flex items-center space-x-4 px-4 py-4 sm:px-6 lg:px-8 hover:bg-gray-100 rounded-xl">
                            <div class="min-w-0 flex-auto">
                                <div class="flex items-center gap-x-3">
                                    {% if component.state == "Draft" %}
                                        <div class="flex-none rounded-full p-1 text-red-500 bg-gray-100/10">
                                            <div class="h-2 w-2 rounded-full bg-current"></div>
                                        </div>
                                    {% elseif component.state == "Private" %}
                                        <div class="flex-none rounded-full p-1 text-yellow-500 bg-gray-100/10">
                                            <div class="h-2 w-2 rounded-full bg-current"></div>
                                        </div>
                                    {% elseif component.state == "Published" %}
                                        <div class="flex-none rounded-full p-1 text-indigo-500 bg-gray-100/10">
                                            <div class="h-2 w-2 rounded-full bg-current"></div>
                                        </div>
                                    {% endif %}
                                    <h2 class="min-w-0 text-sm font-semibold leading-6 text-gray-700">
                                        <a href="#" class="flex gap-x-2">
                                            <span class="whitespace-nowrap">{{ component.name }}</span>
                                            <span class="text-gray-400">/</span>
                                            <span class="truncate">{{ component.designsystem }}</span>
                                            <a href="{{ path('app_show_component', {'id': component.id}) }}" class="absolute inset-0"></a>

                                        </a>
                                    </h2>
                                </div>
                                <div class="mt-3 flex items-center gap-x-2.5 text-xs leading-5 text-gray-400">
                                    <p class="whitespace-nowrap">{{ component.type }} Component</p>
                                    <svg viewBox="0 0 2 2" class="h-0.5 w-0.5 flex-none fill-gray-300">
                                        <circle cx="1" cy="1" r="1" />
                                    </svg>
                                    <p class="truncate">Created
                                        {# Get the current timestamp in seconds #}
                                        {% set currentTime = 'now'|date('U') %}

                                        {# Get the timestamp of the component's creation time #}
                                        {% set componentTime = component.createdAt|date('U') %}

                                        {# Calculate the time difference in seconds #}
                                        {% set timeDifference = currentTime - componentTime %}

                                        {# Calculate the time units #}
                                        {% set months = (timeDifference / (30 * 24 * 3600))|round(0, 'floor') %}

                                        {# Output the message #}
                                        {% if timeDifference > 3600*24*30 %}
                                            {% set months = (timeDifference / (30 * 24 * 3600))|round(0, 'floor') %}
                                            {% set days = ((timeDifference % 30*24*3600) / (24 * 3600))|round(0, 'floor') %}
                                            {{ months }}m {{ days }}d
                                        {% elseif timeDifference > 24*3600 %}
                                            {% set days = (timeDifference / (24 * 3600))|round(0, 'floor') %}
                                            {% set hours = ((timeDifference % 24*3600) / (3600))|round(0, 'floor') %}
                                            {{ days }}d {{ hours }}h
                                        {% elseif timeDifference > 3600 %}
                                            {% set hours = (timeDifference / (3600))|round(0, 'floor') %}
                                            {% set minutes = ((timeDifference % 3600) / (60))|round(0, 'floor') %}
                                            {{ hours }}h {{ minutes }}m
                                        {% elseif timeDifference > 60 %}
                                            {% set minutes = (timeDifference / (60))|round(0, 'floor') %}
                                            {% set seconds = (timeDifference % 60)|round(0, 'floor') %}
                                            {{ minutes }}m {{ seconds }}s
                                        {% else %}
                                            {{ timeDifference }}s
                                        {% endif %}
                                        ago</p>
                                </div>
                            </div>
                            {% if component.state == "Draft" %}
                                <div class="rounded-full flex-none py-1 px-2 text-xs font-medium ring-1 ring-inset text-red-600 bg-gray-400/10 ring-red-600/50">Draft</div>
                            {% elseif component.state == "Private" %}
                                <div class="rounded-full flex-none py-1 px-2 text-xs font-medium ring-1 ring-inset text-yellow-500 bg-gray-400/10 ring-yellow-500/50">Private</div>
                            {% elseif component.state == "Published" %}
                                <div class="rounded-full flex-none py-1 px-2 text-xs font-medium ring-1 ring-inset text-indigo-600 bg-gray-400/10 ring-indigo-600/50">Published</div>
                            {% endif %}
                            <svg class="h-5 w-5 flex-none text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                            </svg>
                        </li>
                    {% endfor %}
                    <!-- More deployments... -->
                </ul>
                </div>
            </div>
            <div id="tab2" class="tab-content hidden">
                <!-- Deployment list -->
                {% if app.user.buys|length == 0 %}
                    <div class="text-center h-1/2 flex flex-col justify-center">
                        <h3 class="mt-2 text-sm font-semibold text-gray-900">No purchased components</h3>
                        <p class="mt-1 text-sm text-gray-500">Get started by <a href="/community" class="font-medium text-primary">exploring community components</a>!</p>
                    </div>

                {% endif %}
                <div class="px-4 sm:px-6 lg:px-8">
                <ul role="list" class="divide-y divide-gray-200">
                    {% for buy in app.user.buys|reverse %}
                        <li class="relative flex items-center space-x-4 px-4 py-4 sm:px-6 lg:px-8 hover:bg-gray-100 rounded-xl">
                            <div class="min-w-0 flex-auto">
                                <div class="flex items-center gap-x-3">
                                        <div class="flex-none rounded-full p-1 text-primary bg-gray-100/10">
                                            <div class="h-2 w-2 rounded-full bg-current"></div>
                                        </div>
                                    <h2 class="min-w-0 text-sm font-semibold leading-6 text-gray-700">
                                        <a href="#" class="flex gap-x-2">
                                            <span class="whitespace-nowrap">{{ buy.component.name }}</span>
                                            <span class="text-gray-400">/</span>
                                            <span class="truncate">{{ buy.component.designsystem }} of {{ buy.component.owner.firstname }} {{ buy.component.owner.lastname }}</span>
                                            <a href="{{ path('app_show_component', {'id': buy.component.id}) }}" class="absolute inset-0"></a>

                                        </a>
                                    </h2>
                                </div>
                                <div class="mt-3 flex items-center gap-x-2.5 text-xs leading-5 text-gray-400">
                                    <p class="whitespace-nowrap">{{ buy.component.type }} Component</p>
                                    <svg viewBox="0 0 2 2" class="h-0.5 w-0.5 flex-none fill-gray-300">
                                        <circle cx="1" cy="1" r="1" />
                                    </svg>
                                    <p class="truncate">Purchased
                                        {# Get the current timestamp in seconds #}
                                        {% set currentTime = 'now'|date('U') %}

                                        {# Get the timestamp of the component's creation time #}
                                        {% set componentTime = buy.transactionDate|date('U') %}

                                        {# Calculate the time difference in seconds #}
                                        {% set timeDifference = currentTime - componentTime %}

                                        {# Calculate the time units #}
                                        {% set months = (timeDifference / (30 * 24 * 3600))|round(0, 'floor') %}

                                        {# Output the message #}
                                        {% if timeDifference > 3600*24*30 %}
                                            {% set months = (timeDifference / (30 * 24 * 3600))|round(0, 'floor') %}
                                            {% set days = ((timeDifference % 30*24*3600) / (24 * 3600))|round(0, 'floor') %}
                                            {{ months }}m {{ days }}d
                                        {% elseif timeDifference > 24*3600 %}
                                            {% set days = (timeDifference / (24 * 3600))|round(0, 'floor') %}
                                            {% set hours = ((timeDifference % 24*3600) / (3600))|round(0, 'floor') %}
                                            {{ days }}d {{ hours }}h
                                        {% elseif timeDifference > 3600 %}
                                            {% set hours = (timeDifference / (3600))|round(0, 'floor') %}
                                            {% set minutes = ((timeDifference % 3600) / (60))|round(0, 'floor') %}
                                            {{ hours }}h {{ minutes }}m
                                        {% elseif timeDifference > 60 %}
                                            {% set minutes = (timeDifference / (60))|round(0, 'floor') %}
                                            {% set seconds = (timeDifference % 60)|round(0, 'floor') %}
                                            {{ minutes }}m {{ seconds }}s
                                        {% else %}
                                            {{ timeDifference }}s
                                        {% endif %}
                                        ago</p>
                                </div>
                            </div>
                                <div class="rounded-full flex-none py-1 px-2 text-xs font-medium ring-1 ring-inset text-primary bg-gray-400/10 ring-primary/50">View</div>
                            <svg class="h-5 w-5 flex-none text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                            </svg>
                        </li>
                    {% endfor %}
                    <!-- More deployments... -->
                </ul>
                </div>
            </div>
        </div>
    </div>
</main>
</div>
</div>
<script>
    const select = document.getElementById('selecttab');
    const tab1 = document.getElementById('tab1');
    const tab2 = document.getElementById('tab2');
    select.addEventListener('change', () =>
    {
        if(select.value === "Your components"){
            tab2.classList.add('hidden')
            tab2.classList.remove('active')
            tab1.classList.remove('hidden')
            tab1.classList.add('active')
        }else{
            tab1.classList.add('hidden')
            tab1.classList.remove('active')
            tab2.classList.remove('hidden')
            tab2.classList.add('active')
        }
    });
</script>
<script>
    const tabs = document.querySelectorAll(".tab");
    const content = document.querySelectorAll(".tab-content");

    for (let i = 0; i < tabs.length; i++) {
        tabs[i].addEventListener("click", (e) => {
            // Désactive tous les onglets
            for (let i = 0; i < tabs.length; i++) {
                tabs[i].classList.remove("bg-primary-menubg");
                tabs[i].classList.remove("text-primary");
                tabs[i].classList.add("text-gray-500");
                tabs[i].classList.add("hover:text-gray-700");
                tabs[i].classList.remove("active");
                content[i].classList.add("hidden");
            }

            // Active l'onglet cliqué
            e.target.classList.add("bg-primary-menubg");
            e.target.classList.add("text-primary");
            tabs[i].classList.remove("text-gray-500");
            tabs[i].classList.remove("hover:text-gray-700");
            e.target.classList.add("active");
            content[i].classList.remove("hidden");
        });
    }





    const opencloseprofilemenu = () => {
        const usermenu = document.getElementById('usermenu');
        if (usermenu.className.includes('hidden')) {
            usermenu.classList.remove('hidden');
        } else {
            usermenu.classList.add('hidden');
        }
    };
    const openclosesortbymenu = () => {
        const usermenu = document.getElementById('sortbymenu');
        if (usermenu.className.includes('hidden')) {
            usermenu.classList.remove('hidden');
        } else {
            usermenu.classList.add('hidden');
        }
    };
</script>
{% include 'components/flashes.html.twig' %}
</body>

